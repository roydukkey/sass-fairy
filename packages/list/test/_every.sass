// Copyright (c) roydukkey. All rights reserved.
// Licensed under the MIT. See LICENSE file in the project root for full license information.

@use 'sass:list'
@use 'sass:meta'
@use '@sass-fairy/list' as src
@use 'true'


@function _greater-than-ten($item, $index...)
	@return $item > 10


@function _greater-than-index($item, $index, $list)
	@return $item > $index


@function _equals-2n-plus-index($item, $index, $list)
	$length: list.length($list)
	$n: $index + 2

	@if $n > $length
		$n: $n - $length + $length % 2

	@return $item == list.nth($list, $n)


@include true.describe('@function list.every')

	@include true.it('Predicate matches every item in a list')
		$assert: src.every(16 32 64 128 256, meta.get-function('_greater-than-ten'))
		@include true.assert-equal($assert, true)

	@include true.it('Predicate does not match any items in a list')
		$assert: src.every(2 4 6 8, meta.get-function('_greater-than-ten'))
		@include true.assert-equal($assert, false)

	@include true.it('Predicate receives the item indexes')
		$assert: src.every(16 32 64 128 256, meta.get-function('_greater-than-index'))
		@include true.assert-equal($assert, true, '[16 32 64 128 256]')

		$assert: src.every(1 1 1 1 1, meta.get-function('_greater-than-index'))
		@include true.assert-equal($assert, false, '[1 1 1 1 1]')

	@include true.it('Predicate receives the calling list')
		$assert: src.every(1 2 1 2 1 2 1 2, meta.get-function('_equals-2n-plus-index'))
		@include true.assert-equal($assert, true, '[1 2 1 2 1 2 1 2]')

		$assert: src.every(2 1 1 2 1 2 1 2, meta.get-function('_equals-2n-plus-index'))
		@include true.assert-equal($assert, false, '[2 1 1 2 1 2 1 2]')

	@include true.it('Throws when $predicate is not a function')
		$assert: src.every(null, null)
		$expected: 'ERROR: $predicate: `null` is not a function for `every()`.'
		@include true.assert-equal($assert, $expected)
