// Copyright (c) roydukkey. All rights reserved.
// Licensed under the MIT. See LICENSE file in the project root for full license information.

@use 'sass:meta'
@use '@sass-fairy/exception/src/parameter'
@use 'down'
@use 'up'
@use 'internal/to-string'
@use 'internal/value'
@use 'internal/validate-breakpoint'


///
/// @throw No breakpoint exists by the name `#{$first-name|$second-name}`.
///
	@overload down-between($first-name, $second-name)
///
	@overload down-between($first-size, $second-size)
///
/// @throw `#{$first-breakpoint|$second-breakpoint}` is not a string or number.
/// @throw First breakpoint must be smaller than second breakpoint.
///
@function down-between($first-breakpoint, $second-breakpoint)
	$first-breakpoint: validate-breakpoint.validate-breakpoint('down-between', 'first-breakpoint', $first-breakpoint, 'min-height')

	@if meta.type-of($first-breakpoint) != 'map'
		@error $first-breakpoint

	$second-breakpoint: validate-breakpoint.validate-breakpoint('down-between', 'second-breakpoint', $second-breakpoint, 'max-height')

	@if meta.type-of($second-breakpoint) != 'map'
		@error $second-breakpoint

	@if value.value($first-breakpoint) >= value.value($second-breakpoint)
		@error parameter.parameter('First breakpoint must be smaller than second breakpoint', 'down-between', 'first-breakpoint', 'second-breakpoint')

	@return '#{to-string.to-string($first-breakpoint)} and #{to-string.to-string($second-breakpoint)}'


///
/// @throw No breakpoint exists by the name `#{$first-name|$second-name}`.
///
	@overload down-between($first-name, $second-name)
///
	@overload down-between($first-size, $second-size)
///
/// @output Unless the breakpoint is the smallest or largest, makes the content apply to the given breakpoints.
///
/// @throw `#{$first-breakpoint|$second-breakpoint}` is not a string or number.
/// @throw First breakpoint must be smaller than second breakpoint.
///
@mixin down-between($first-breakpoint, $second-breakpoint)
	$first: validate-breakpoint.validate-breakpoint('down-between', 'first-breakpoint', $first-breakpoint, 'min-height', true)

	@if $first and meta.type-of($first) != 'map'
		// true:cannot-test
		@error $first

	$second: validate-breakpoint.validate-breakpoint('down-between', 'second-breakpoint', $second-breakpoint, 'max-height', true)

	@if $second

		@if meta.type-of($second) != 'map'
			// true:cannot-test
			@error $second

		@if $first == null
			@include down.down($second-breakpoint)
				@content

		@else

			@if value.value($first) >= value.value($second)
				// true:cannot-test
				@error parameter.parameter('First breakpoint must be smaller than second breakpoint', 'down-between', 'first-breakpoint', 'second-breakpoint')

			@media #{to-string.to-string($first)} and #{to-string.to-string($second)}
				@content

	@else
		@include up.up($first-breakpoint)
			@content
