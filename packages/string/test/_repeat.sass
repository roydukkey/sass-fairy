// Copyright (c) roydukkey. All rights reserved.
// Licensed under the MIT. See LICENSE file in the project root for full license information.

@use 'sass:string'
@use '@sass-fairy/string' as src
@use 'true'


@include true.describe('@function string.repeat')

	@include true.it('Returns an empty string when count is zero')
		$assert: src.repeat('a', 0)
		$expected: ''
		@include true.assert-equal($assert, $expected)

	@include true.it('Returns the same string when count is one')
		$assert: src.repeat('a', 1)
		$expected: 'a'
		@include true.assert-equal($assert, $expected)

	@include true.it('Returns a given string repeated $n times')
		$assert: src.repeat('a', 13)
		$expected: 'aaaaaaaaaaaaa'
		@include true.assert-equal($assert, $expected)

	@include true.it('Infers quotes from a given string')
		$assert: src.is-quoted(src.repeat('a', 0))
		$expected: true
		@include true.assert-equal($assert, $expected, '[true]')

		$assert: src.is-quoted(src.repeat(a, 0))
		$expected: false
		@include true.assert-equal($assert, $expected, '[false]')

	@include true.it('Throws when $string is not a string')
		$assert: src.repeat(1, 1)
		$expected: 'ERROR: $string: `1` is not a string for `repeat()`.'
		@include true.assert-equal($assert, $expected)

	@include true.it('Throws when $count is not a number')
		$assert: src.repeat('1', true)
		$expected: 'ERROR: $count: `true` is not a non-negative number for `repeat()`.'
		@include true.assert-equal($assert, $expected)

	@include true.it('Throws when $count is not non-negative')
		$assert: src.repeat('1', -1)
		$expected: 'ERROR: $count: `-1` is not a non-negative number for `repeat()`.'
		@include true.assert-equal($assert, $expected)
