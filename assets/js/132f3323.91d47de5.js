"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[4702],{4030:(e,t,n)=>{n.d(t,{ZP:()=>o});var i=n(7626),r=(n(9231),n(4852));const a={toc:[]};function o(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,i.Z)({},a,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Don\u2019t see the function you\u2019re looking for? Request a ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/roydukkey/sass-fairy/issues/new"},"new feature")," describing a use case."))}o.isMDXComponent=!0},2470:(e,t,n)=>{n.d(t,{Z:()=>i});const i={module:"meta",description:JSON.parse('{"WL":"Provides extended functionality for handling Sass\u2019s inner workings"}').WL,basePath:"/api/meta",hiddenNativeFields:["type-of"],functions:{"call-or-reference":{group:"main",description:"Allows a function to return its reference when no parameters are provided, otherwise maintaining its regular behavior.",parameters:{function:{description:"The function to call or reference.",type:["Function"]},args:{description:"The arguments to apply to the invocation of the function.",type:["ArgList<*>"]}},return:{description:"The given function is returned when no arguments are given; otherwise, supplied with the given arguments, the value returned by the invocation of the given function is returned.",type:["Function","*"]}},"get-keyword":{group:"main",description:"Gets the value of the named parameter from the given argument list, otherwise providing a default value.",parameters:{args:{description:"The argument list from which to get the named parameter.",type:["!ArgList"]},name:{description:"The name of the parameter to get.",type:["String"]},default:{description:"The value of the parameter when not contained in the argument list.",type:["*"],defaultValue:"null"}},return:{description:"The value of the named parameter when it exists; otherwise, the given default value.",type:["*"]}},"strip-keywords":{group:"main",description:"Strips all named parameters from the given argument list.",parameters:{args:{description:"The argument list from which to strip all named parameters.",type:["!ArgList"]}},return:{description:"Returns the values of an argument list without named parameters.",type:["List"]}},"type-of":{group:"main",description:"Returns the type of the given value.",parameters:{value:{description:"The value from which to get a type.",type:["*"]}},return:{description:"Returns an unquoted string describing the type of value given.",type:["String"]}}}}},7302:(e,t,n)=>{n.d(t,{Z:()=>c});var i=n(7626),r=n(9231),a=n(4852);const o={toc:[]};function s(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,i.Z)({},o,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("admonition",{type:"note"},(0,a.kt)("p",null,"Since ",n.hiddenNativeFields.length>1?"their":"its"," functionality is enhanced by this library, the combined API hides the native ",n.hiddenNativeFields.map(((e,t,i)=>{let{length:o}=i;return(0,a.kt)(r.Fragment,{key:t,mdxType:"Fragment"},t>0&&t<o-1&&",",o>1&&t===o-1&&" and"," ",(0,a.kt)("code",null,n.module,".",e,"()"))}))," ",n.hiddenNativeFields.length>1?"functions":"function",".")))}s.isMDXComponent=!0;var l=n(3614);function c(e){let{spec:{module:t,hiddenNativeFields:n}}=e;return r.createElement(r.Fragment,null,r.createElement("p",null,"In order to avoid constantly declaring both the native ",r.createElement("code",null,"sass:",t)," module and this library, the combined API has been added which merges the two."),r.createElement(l.Z,{className:"language-scss"},["// Rather than using both modules separately...",`@use '@sass-fairy/${t}';`,`@use 'sass:${t}';`,"","// ...this statement will accomplish the same thing.",`@use '@sass-fairy/${t}/${t}';`].join("\n")),n&&r.createElement(s,{module:t,hiddenNativeFields:n}))}},5541:(e,t,n)=>{n.d(t,{Z:()=>s});var i=n(7577),r=n(8455),a=n(1879),o=n(9231);function s(e){let{spec:{basePath:t,functions:n},group:s}=e;const l=(0,a.Z)(),c=null==s?void 0:s.split("/")[1];return c&&(t+=`/${c}`),o.createElement(o.Fragment,null,o.createElement("dl",null,n&&Object.entries(n).filter((e=>{let[,{group:t}]=e;return t===(s??"main")})).map(((e,n)=>{let[a,{description:s,parameters:c,overloads:d}]=e;return o.createElement(o.Fragment,{key:n},o.createElement("dt",null,o.createElement(i.Z,{to:`${l}${t}/${a}`},o.createElement("code",null,o.createElement(r.Z,{fieldName:a,parameters:c})))," ",d&&d.length>0&&o.createElement("small",{className:"spec-overload-count"},"[+",d.length,"\xa0overload",d.length>1&&"s","]")),o.createElement("dd",null,o.createElement("p",null,s)))}))),(null==s?void 0:s.endsWith("/reference"))&&o.createElement(o.Fragment,null,"More information on ",o.createElement(i.Z,{to:`${l}/docs/compare-logic`},"comparison logic")," and ",o.createElement(i.Z,{to:`${l}/docs/reference-functions`},"reference functions"),"."))}},1879:(e,t,n)=>{n.d(t,{Z:()=>r});var i=n(980);function r(){const{activeVersion:e}=(0,i.Iw)(void 0);return e&&!e.isLast?e.path:""}},1375:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>m,contentTitle:()=>d,default:()=>v,frontMatter:()=>c,metadata:()=>u,toc:()=>p});var i=n(7626),r=(n(9231),n(4852)),a=n(7302),o=n(4030),s=n(5541),l=n(2470);const c={title:"Meta API Overview",module:"meta",slug:"./",hide_title:!0,hide_table_of_contents:!0},d="API Overview",u={unversionedId:"api/meta/overview",id:"api/meta/overview",title:"Meta API Overview",description:"Functions",source:"@site/docs/api/meta/overview.mdx",sourceDirName:"api/meta",slug:"/api/meta/",permalink:"/next/api/meta/",draft:!1,editUrl:"https://github.com/roydukkey/sass-fairy/edit/master/website/docs/api/meta/overview.mdx",tags:[],version:"current",frontMatter:{title:"Meta API Overview",module:"meta",slug:"./",hide_title:!0,hide_table_of_contents:!0},sidebar:"metaSidebar",next:{title:"call-or-reference",permalink:"/next/api/meta/call-or-reference"}},m={},p=[{value:"Functions",id:"functions",level:2},{value:"Combined API",id:"combined-api",level:2}],h={toc:p};function v(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,i.Z)({},h,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"api-overview"},"API Overview"),(0,r.kt)("h2",{id:"functions"},"Functions"),(0,r.kt)(s.Z,{spec:l.Z,mdxType:"SignatureList"}),(0,r.kt)(o.ZP,{mdxType:"FeatureRequest"}),(0,r.kt)("h2",{id:"combined-api"},"Combined API"),(0,r.kt)(a.Z,{spec:l.Z,mdxType:"CombinedApi"}))}v.isMDXComponent=!0}}]);