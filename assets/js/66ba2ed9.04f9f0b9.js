"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[9165],{4030:(e,t,i)=>{i.d(t,{ZP:()=>s});var r=i(7626),n=(i(9231),i(4852));const a={toc:[]};function s(e){let{components:t,...i}=e;return(0,n.kt)("wrapper",(0,r.Z)({},a,i,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"Don\u2019t see the function you\u2019re looking for? Request a ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/roydukkey/sass-fairy/issues/new"},"new feature")," describing a use case."))}s.isMDXComponent=!0},5541:(e,t,i)=>{i.d(t,{Z:()=>o});var r=i(7577),n=i(8455),a=i(1879),s=i(9231);function o(e){let{spec:{basePath:t,functions:i},group:o}=e;const p=(0,a.Z)(),c=null==o?void 0:o.split("/")[1];return c&&(t+=`/${c}`),s.createElement(s.Fragment,null,s.createElement("dl",null,i&&Object.entries(i).filter((e=>{let[,{group:t}]=e;return t===(o??"main")})).map(((e,i)=>{let[a,{description:o,parameters:c,overloads:d}]=e;return s.createElement(s.Fragment,{key:i},s.createElement("dt",null,s.createElement(r.Z,{to:`${p}${t}/${a}`},s.createElement("code",null,s.createElement(n.Z,{fieldName:a,parameters:c})))," ",d&&d.length>0&&s.createElement("small",{className:"spec-overload-count"},"[+",d.length,"\xa0overload",d.length>1&&"s","]")),s.createElement("dd",null,s.createElement("p",null,o)))}))),(null==o?void 0:o.endsWith("/reference"))&&s.createElement(s.Fragment,null,"More information on ",s.createElement(r.Z,{to:`${p}/docs/compare-logic`},"comparison logic")," and ",s.createElement(r.Z,{to:`${p}/docs/reference-functions`},"reference functions"),"."))}},1879:(e,t,i)=>{i.d(t,{Z:()=>n});var r=i(980);function n(){const{activeVersion:e}=(0,r.Iw)(void 0);return e&&!e.isLast?e.path:""}},7731:(e,t,i)=>{i.d(t,{Z:()=>l,C:()=>d});const r=JSON.parse('{"WL":"Provides Sass functions to standardize exception messages and assist with common validation"}');var n=i(9231);const a={context:{description:"The name of the function or mixin issuing the error.",type:["String"]}},s={message:{description:"The message which describes the issue.",type:["String"]}},o={value:{description:"The value which was received.",type:["*"]}},p={types:{description:"The types which are expected.",type:["ArgList<*>"]}},c={...a,name:{description:"The name of the index parameter which is being validated.",type:["String"]},value:{description:"The value of the index parameter which is being validated. A valid negative value will be transformed to the respective positive index value.",type:["Number"]}},d="Must be passed by name.",l={module:"exception",description:r.WL,basePath:"/api/exception",functions:{"is-separator-invalid":{group:"main",description:"Indicates whether a specified value is invalid for a separator parameter.",parameters:{value:{description:"The value which is being validated.",type:["*"]}},return:{description:n.createElement(n.Fragment,null,n.createElement("code",null,"true")," if the value is a valid; otherwise, ",n.createElement("code",null,"false"),"."),type:["Boolean"]}},parameter:{group:"main",description:"Returns an error message stating an issue with one or more parameters.",parameters:{...s,...a,names:{description:"The names of the parameters for which there is an issue.",type:["ArgList<*>"]}},return:{description:"A string describing the reason one or more parameters are invalid.",type:["String"]}},"parameter-type":{group:"main",description:"Returns an error message stating a parameter received the wrong type.",parameters:{...a,name:{description:"The name of the parameter which has received the wrong type.",type:["String"]},...o,...p},return:{description:"A string describing what types are acceptable for a parameter and the value that is invalid.",type:["String"]}},separator:{group:"main",description:"Returns an error message stating a separator variable received the wrong value.",return:{description:"A string describing what values are acceptable for a separator.",type:["String"]},overloads:[{description:"Returns an error message stating a separator parameter received the wrong value.",parameters:{context:{...a.context}}}]},"validate-index":{group:"main",description:"Returns a valid index for a list of a given length; otherwise, an error message stating the reason the index is invalid.",parameters:{...c,list:{description:"The list value for which the index is validated against.",type:["List"]}},return:{description:"A string when the index is not a number, is zero, or is invalid for the amount of elements in the list; otherwise, a number.",type:["Number","String"]},overloads:[{description:"Returns a valid index for a string of a given length; otherwise, an error message stating the reason the index is invalid.",parameters:{...c,string:{description:"The string value for which the index is validated against.",type:["String"]}},return:{description:"A string when the index is not a number; otherwise, a number."}}]},variable:{group:"main",description:"Returns an error message stating an issue with one or more variables.",parameters:{...s,names:{description:"The names of the variables for which there is an issue.",type:["ArgList<*>"]}},return:{description:"A string describing the reason one or more variables are misconfigured.",type:["String"]}},"variable-type":{group:"main",description:"Returns an error message stating a variable received the wrong type.",parameters:{name:{description:"The name of the variable which has received the wrong type.",type:["String"]},...o,...p,message:{description:["The additional message which describes the issue.",d].join(" "),type:["String"],defaultValue:"null"}},return:{description:"A string describing what types are acceptable for a variable and the value that is misconfigured.",type:["String"]}}}}},1092:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>l,contentTitle:()=>c,default:()=>h,frontMatter:()=>p,metadata:()=>d,toc:()=>u});var r=i(7626),n=(i(9231),i(4852)),a=i(4030),s=i(5541),o=i(7731);const p={title:"Exception API Overview",module:"exception",slug:"./",hide_title:!0,hide_table_of_contents:!0},c="API Overview",d={unversionedId:"api/exception/overview",id:"version-1/api/exception/overview",title:"Exception API Overview",description:"Functions",source:"@site/versioned_docs/version-1/api/exception/overview.mdx",sourceDirName:"api/exception",slug:"/api/exception/",permalink:"/api/exception/",draft:!1,editUrl:"https://github.com/roydukkey/sass-fairy/edit/master/website/versioned_docs/version-1/api/exception/overview.mdx",tags:[],version:"1",frontMatter:{title:"Exception API Overview",module:"exception",slug:"./",hide_title:!0,hide_table_of_contents:!0},sidebar:"exceptionSidebar",next:{title:"is-separator-invalid",permalink:"/api/exception/is-separator-invalid"}},l={},u=[{value:"Functions",id:"functions",level:2}],m={toc:u};function h(e){let{components:t,...i}=e;return(0,n.kt)("wrapper",(0,r.Z)({},m,i,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"api-overview"},"API Overview"),(0,n.kt)("h2",{id:"functions"},"Functions"),(0,n.kt)(s.Z,{spec:o.Z,mdxType:"SignatureList"}),(0,n.kt)(a.ZP,{mdxType:"FeatureRequest"}))}h.isMDXComponent=!0}}]);