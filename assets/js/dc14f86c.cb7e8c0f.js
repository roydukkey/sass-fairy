"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[8212],{4030:(e,r,t)=>{t.d(r,{ZP:()=>o});var a=t(7626),i=(t(9231),t(4852));const n={toc:[]};function o(e){let{components:r,...t}=e;return(0,i.kt)("wrapper",(0,a.Z)({},n,t,{components:r,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Don\u2019t see the function you\u2019re looking for? Request a ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/roydukkey/sass-fairy/issues/new"},"new feature")," describing a use case."))}o.isMDXComponent=!0},5541:(e,r,t)=>{t.d(r,{Z:()=>s});var a=t(7577),i=t(8455),n=t(1879),o=t(9231);function s(e){let{spec:{basePath:r,functions:t},group:s}=e;const l=(0,n.Z)(),d=null==s?void 0:s.split("/")[1];return d&&(r+=`/${d}`),o.createElement(o.Fragment,null,o.createElement("dl",null,t&&Object.entries(t).filter((e=>{let[,{group:r}]=e;return r===(s??"main")})).map(((e,t)=>{let[n,{description:s,parameters:d,overloads:p}]=e;return o.createElement(o.Fragment,{key:t},o.createElement("dt",null,o.createElement(a.Z,{to:`${l}${r}/${n}`},o.createElement("code",null,o.createElement(i.Z,{fieldName:n,parameters:d})))," ",p&&p.length>0&&o.createElement("small",{className:"spec-overload-count"},"[+",p.length,"\xa0overload",p.length>1&&"s","]")),o.createElement("dd",null,o.createElement("p",null,s)))}))),(null==s?void 0:s.endsWith("/reference"))&&o.createElement(o.Fragment,null,"More information on ",o.createElement(a.Z,{to:`${l}/docs/compare-logic`},"comparison logic")," and ",o.createElement(a.Z,{to:`${l}/docs/reference-functions`},"reference functions"),"."))}},3484:(e,r,t)=>{t.d(r,{Z:()=>o});var a=t(7577),i=t(1879),n=t(9231);function o(e){let{spec:{basePath:r,variables:t},group:o}=e;const s=(0,i.Z)(),l=null==o?void 0:o.split("/")[1];return l&&(r+=`/${l}`),n.createElement("dl",null,t&&Object.entries(t).filter((e=>{let[,{group:r}]=e;return r===(o??"main")})).map(((e,t)=>{let[i,{fileName:o,description:l,configurable:d}]=e;return n.createElement(n.Fragment,{key:t},n.createElement("dt",null,n.createElement(a.Z,{to:`${s}${r}/${o??i}`},n.createElement("code",null,"$",i,d&&" !default"))),n.createElement("dd",null,n.createElement("p",null,l)))})))}},1879:(e,r,t)=>{t.d(r,{Z:()=>i});var a=t(980);function i(){const{activeVersion:e}=(0,a.Iw)(void 0);return e&&!e.isLast?e.path:""}},4445:(e,r,t)=>{t.d(r,{Z:()=>b});const a=JSON.parse('{"WL":"Provides Sass mixins, functions, and variables for working with breakpoints and aids in responsive development"}');var i=t(9231);const n={breakpoint:{description:"The name of the breakpoint at which the generated rule should break.",type:["String"]}},o={"first-breakpoint":{description:"The name of the smaller breakpoint at which the generated rule should break.",type:["String"]}},s={"second-breakpoint":{description:"The name of the larger breakpoint at which the generated rule should break.",type:["String"]}},l={size:{description:"The size at which the generated rule should break.",type:["Number"]}},d={"first-size":{description:"The smaller size at which the generated rule should break.",type:["Number"]}},p={"second-size":{description:"The larger size at which the generated rule should break.",type:["Number"]}},u="A string representation of the media query condition that meets the requirements for the given breakpoint.",c="A string representation of the media query condition that meets the requirements for the given breakpoints.",h="A string representation of the media query condition that meets the requirements for the given size.",m="A string representation of the media query condition that meets the requirements for the given sizes.",g="A string representation of the media query condition that meets the requirements for the given breakpoint and size.",v="A string representation of the media query condition that meets the requirements for the given size and breakpoint.",b={module:"break",description:a.WL,basePath:"/api/break",variables:{"horizontal-sizes":{group:"break/horizontal",fileName:"sizes",description:"A configurable map defining the dimensions at which layout will change, adapting to different screen widths, according to media queries.",defaultValue:"(x-small: 0, small: 576px, medium: 768px, large: 992px, x-large: 1200px, xx-large: 1400px)",configurable:"(x-small: 0, medium: 680px, large: 960px, x-large: 1400px)"},"horizontal-names":{group:"break/horizontal",fileName:"names",description:"A list of sorted horizontal breakpoint names.",defaultValue:"(x-small, small, medium, large, x-large, xx-large)"},"horizontal-values":{group:"break/horizontal",fileName:"values",description:"A list of sorted horizontal breakpoint values.",defaultValue:"(0, 576px, 768px, 992px, 1200px, 1400px)"},"vertical-sizes":{group:"break/vertical",fileName:"sizes",description:"A configurable map defining the dimensions at which layout will change, adapting to different screen heights, according to media queries.",defaultValue:"(x-small: 0)",configurable:"(x-small: 0, medium: 680px, large: 960px, x-large: 1200px)"},"vertical-names":{group:"break/vertical",fileName:"names",description:"A list of sorted vertical breakpoint names.",defaultValue:"(x-small)"},"vertical-values":{group:"break/vertical",fileName:"values",description:"A list of sorted vertical breakpoint values.",defaultValue:"(0)"}},functions:{in:{group:"break/horizontal",description:"Generates a media query rule for the given horizontal breakpoint and narrower.",parameters:n,return:{description:u,type:["String"]},overloads:[{description:"Generates a media query rule for the given size and narrower.",parameters:l,return:{description:h}}]},"in-between":{group:"break/horizontal",description:"Generates a media query rule for the given horizontal breakpoints which is equal and wider than the smaller, and equal and narrower than the larger.",parameters:{...o,...s},return:{description:c,type:["String"]},overloads:[{description:"Generates a media query rule for the given sizes which is equal and wider than the smaller, and equal and narrower than the larger.",parameters:{...d,...p},return:{description:m}},{description:"Generates a media query rule for the given horizontal breakpoint and size which is equal and wider than the smaller, and equal and narrower than the larger.",parameters:{...o,...p},return:{description:g}},{description:"Generates a media query rule for the given size and horizontal breakpoint which is equal and wider than the smaller, and equal and narrower than the larger.",parameters:{...d,...s},return:{description:v}}]},"in-only":{group:"break/horizontal",description:"Generates a media query rule for the given horizontal breakpoint.",parameters:n,return:{description:u,type:["String"]}},out:{group:"break/horizontal",description:"Generates a media query rule for the given horizontal breakpoint and wider.",parameters:n,return:{description:u,type:["String"]},overloads:[{description:"Generates a media query rule for the given size and wider.",parameters:l,return:{description:h}}]},down:{group:"break/vertical",description:"Generates a media query rule for the given vertical breakpoint and shorter.",parameters:n,return:{description:u,type:["String"]},overloads:[{description:"Generates a media query rule for the given size and shorter.",parameters:l,return:{description:h}}]},"down-between":{group:"break/vertical",description:"Generates a media query rule for the given vertical breakpoints which is equal and taller than the smaller, and equal and shorter than the larger.",parameters:{...o,...s},return:{description:c,type:["String"]},overloads:[{description:"Generates a media query rule for the given sizes which is equal and taller than the smaller, and equal and shorter than the larger.",parameters:{...d,...p},return:{description:m}},{description:"Generates a media query rule for the given vertical breakpoint and size which is equal and taller than the smaller, and equal and shorter than the larger.",parameters:{...o,...p},return:{description:g}},{description:"Generates a media query rule for the given size and vertical breakpoint which is equal and taller than the smaller, and equal and shorter than the larger.",parameters:{...d,...s},return:{description:v}}]},"down-only":{group:"break/vertical",description:"Generates a media query rule for the given vertical breakpoint.",parameters:n,return:{description:u,type:["String"]}},up:{group:"break/vertical",description:"Generates a media query rule for the given vertical breakpoint and taller.",parameters:n,return:{description:u,type:["String"]},overloads:[{description:"Generates a media query rule for the given size and taller.",parameters:l,return:{description:h}}]},annotate:{group:"break/helpers",description:"Enables a fixed annotation displaying the active breakpoints of the viewport.",parameters:{direction:{description:"The breakpoint categories to annotate.",type:["'horizontal'","'vertical'","'both'"],defaultValue:"'both'"},position:{description:"The location in the viewport where the annotation will be positioned.",type:["'top right'","'top left'","'bottom right'","'bottom left'"],defaultValue:"'bottom right'"},color:{description:"The primary color of the annotation.",type:["Color"],defaultValue:"#f3afe6"},size:{description:"The font size of the annotation.",type:["Number"],defaultValue:"12px"}},output:i.createElement(i.Fragment,null,"Styles a single ",i.createElement("code",null,"::before")," pseudo-element to a fixed position, with ",i.createElement("a",{href:"https://developer.mozilla.org/en-US/docs/Web/CSS/content",target:"_blank",rel:"nofollow noreferrer noopener"},i.createElement("code",null,"content"))," that describes the active horizontal and/or vertical breakpoints.")}}}},609:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>c,contentTitle:()=>p,default:()=>g,frontMatter:()=>d,metadata:()=>u,toc:()=>h});var a=t(7626),i=(t(9231),t(4852)),n=t(4030),o=t(5541),s=t(4445),l=t(3484);const d={title:"Break API Overview",module:"break",slug:"./",hide_title:!0},p="API Overview",u={unversionedId:"api/break/overview",id:"version-1/api/break/overview",title:"Break API Overview",description:"Horizontal Breakpoints",source:"@site/versioned_docs/version-1/api/break/overview.mdx",sourceDirName:"api/break",slug:"/api/break/",permalink:"/api/break/",draft:!1,editUrl:"https://github.com/roydukkey/sass-fairy/edit/master/website/versioned_docs/version-1/api/break/overview.mdx",tags:[],version:"1",frontMatter:{title:"Break API Overview",module:"break",slug:"./",hide_title:!0},sidebar:"breakSidebar",next:{title:"annotate",permalink:"/api/break/helpers/annotate"}},c={},h=[{value:"Horizontal Breakpoints",id:"horizontal-breakpoints",level:2},{value:"Variables",id:"variables",level:3},{value:"Mixins / Functions",id:"mixins--functions",level:3},{value:"Vertical Breakpoints",id:"vertical-breakpoints",level:2},{value:"Variables",id:"variables-1",level:3},{value:"Mixins / Functions",id:"mixins--functions-1",level:3},{value:"Helpers",id:"helpers",level:2}],m={toc:h};function g(e){let{components:r,...t}=e;return(0,i.kt)("wrapper",(0,a.Z)({},m,t,{components:r,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"api-overview"},"API Overview"),(0,i.kt)("h2",{id:"horizontal-breakpoints"},"Horizontal Breakpoints"),(0,i.kt)("h3",{id:"variables"},"Variables"),(0,i.kt)(l.Z,{spec:s.Z,group:"break/horizontal",mdxType:"VariableList"}),(0,i.kt)("h3",{id:"mixins--functions"},"Mixins / Functions"),(0,i.kt)(o.Z,{spec:s.Z,group:"break/horizontal",mdxType:"SignatureList"}),(0,i.kt)(n.ZP,{mdxType:"FeatureRequest"}),(0,i.kt)("h2",{id:"vertical-breakpoints"},"Vertical Breakpoints"),(0,i.kt)("h3",{id:"variables-1"},"Variables"),(0,i.kt)(l.Z,{spec:s.Z,group:"break/vertical",mdxType:"VariableList"}),(0,i.kt)("h3",{id:"mixins--functions-1"},"Mixins / Functions"),(0,i.kt)(o.Z,{spec:s.Z,group:"break/vertical",mdxType:"SignatureList"}),(0,i.kt)("h2",{id:"helpers"},"Helpers"),(0,i.kt)(o.Z,{spec:s.Z,group:"break/helpers",mdxType:"SignatureList"}),(0,i.kt)(n.ZP,{mdxType:"FeatureRequest"}))}g.isMDXComponent=!0}}]);