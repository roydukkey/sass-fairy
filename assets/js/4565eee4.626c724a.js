"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[9167],{2017:(e,t,r)=>{r.d(t,{Z:()=>o});var a=r(575),n=r(9231),i=r(4872);const o=e=>{let{children:t}=e;return n.createElement(a.Z,{spec:i.Z},t)}},4872:(e,t,r)=>{r.d(t,{Z:()=>f});const a=JSON.parse('{"WL":"Provides Sass mixins, functions, and variables for working with breakpoints and aids in responsive development"}');var n=r(9231);const i={breakpoint:{description:"The name of the breakpoint at which the generated rule should break.",type:["String"]}},o={"first-breakpoint":{description:"The name of the smaller breakpoint at which the generated rule should break.",type:["String"]}},s={"second-breakpoint":{description:"The name of the larger breakpoint at which the generated rule should break.",type:["String"]}},l={size:{description:"The size at which the generated rule should break.",type:["Number"]}},d={"first-size":{description:"The smaller size at which the generated rule should break.",type:["Number"]}},p={"second-size":{description:"The larger size at which the generated rule should break.",type:["Number"]}},h="A string representation of the media query condition that meets the requirements for the given breakpoint.",u="A string representation of the media query condition that meets the requirements for the given breakpoints.",c="A string representation of the media query condition that meets the requirements for the given size.",m="A string representation of the media query condition that meets the requirements for the given sizes.",b="A string representation of the media query condition that meets the requirements for the given breakpoint and size.",g="A string representation of the media query condition that meets the requirements for the given size and breakpoint.",f={module:"break",description:a.WL,basePath:"/api/break",variables:{"horizontal-sizes":{group:"break/horizontal",fileName:"sizes",description:"A configurable map defining the dimensions at which layout will change, adapting to different screen widths, according to media queries.",defaultValue:"(x-small: 0, small: 576px, medium: 768px, large: 992px, x-large: 1200px, xx-large: 1400px)",configurable:"(x-small: 0, medium: 680px, large: 960px, x-large: 1400px)"},"horizontal-names":{group:"break/horizontal",fileName:"names",description:"A list of sorted horizontal breakpoint names.",defaultValue:"(x-small, small, medium, large, x-large, xx-large)"},"horizontal-values":{group:"break/horizontal",fileName:"values",description:"A list of sorted horizontal breakpoint values.",defaultValue:"(0, 576px, 768px, 992px, 1200px, 1400px)"},"vertical-sizes":{group:"break/vertical",fileName:"sizes",description:"A configurable map defining the dimensions at which layout will change, adapting to different screen heights, according to media queries.",defaultValue:"(x-small: 0)",configurable:"(x-small: 0, medium: 680px, large: 960px, x-large: 1200px)"},"vertical-names":{group:"break/vertical",fileName:"names",description:"A list of sorted vertical breakpoint names.",defaultValue:"(x-small)"},"vertical-values":{group:"break/vertical",fileName:"values",description:"A list of sorted vertical breakpoint values.",defaultValue:"(0)"}},functions:{in:{group:"break/horizontal",description:"Generates a media query rule for the given horizontal breakpoint and narrower.",parameters:i,return:{description:h,type:["String"]},overloads:[{description:"Generates a media query rule for the given size and narrower.",parameters:l,return:{description:c}}]},"in-between":{group:"break/horizontal",description:"Generates a media query rule for the given horizontal breakpoints which is equal and wider than the smaller, and equal and narrower than the larger.",parameters:{...o,...s},return:{description:u,type:["String"]},overloads:[{description:"Generates a media query rule for the given sizes which is equal and wider than the smaller, and equal and narrower than the larger.",parameters:{...d,...p},return:{description:m}},{description:"Generates a media query rule for the given horizontal breakpoint and size which is equal and wider than the smaller, and equal and narrower than the larger.",parameters:{...o,...p},return:{description:b}},{description:"Generates a media query rule for the given size and horizontal breakpoint which is equal and wider than the smaller, and equal and narrower than the larger.",parameters:{...d,...s},return:{description:g}}]},"in-only":{group:"break/horizontal",description:"Generates a media query rule for the given horizontal breakpoint.",parameters:i,return:{description:h,type:["String"]}},out:{group:"break/horizontal",description:"Generates a media query rule for the given horizontal breakpoint and wider.",parameters:i,return:{description:h,type:["String"]},overloads:[{description:"Generates a media query rule for the given size and wider.",parameters:l,return:{description:c}}]},down:{group:"break/vertical",description:"Generates a media query rule for the given vertical breakpoint and shorter.",parameters:i,return:{description:h,type:["String"]},overloads:[{description:"Generates a media query rule for the given size and shorter.",parameters:l,return:{description:c}}]},"down-between":{group:"break/vertical",description:"Generates a media query rule for the given vertical breakpoints which is equal and taller than the smaller, and equal and shorter than the larger.",parameters:{...o,...s},return:{description:u,type:["String"]},overloads:[{description:"Generates a media query rule for the given sizes which is equal and taller than the smaller, and equal and shorter than the larger.",parameters:{...d,...p},return:{description:m}},{description:"Generates a media query rule for the given vertical breakpoint and size which is equal and taller than the smaller, and equal and shorter than the larger.",parameters:{...o,...p},return:{description:b}},{description:"Generates a media query rule for the given size and vertical breakpoint which is equal and taller than the smaller, and equal and shorter than the larger.",parameters:{...d,...s},return:{description:g}}]},"down-only":{group:"break/vertical",description:"Generates a media query rule for the given vertical breakpoint.",parameters:i,return:{description:h,type:["String"]}},up:{group:"break/vertical",description:"Generates a media query rule for the given vertical breakpoint and taller.",parameters:i,return:{description:h,type:["String"]},overloads:[{description:"Generates a media query rule for the given size and taller.",parameters:l,return:{description:c}}]},annotate:{group:"break/helpers",description:"Enables a fixed annotation displaying the active breakpoints of the viewport.",parameters:{direction:{description:"The breakpoint categories to annotate.",type:["'horizontal'","'vertical'","'both'"],defaultValue:"'both'"},position:{description:"The location in the viewport where the annotation will be positioned.",type:["'top right'","'top left'","'bottom right'","'bottom left'"],defaultValue:"'bottom right'"},color:{description:"The primary color of the annotation.",type:["Color"],defaultValue:"#f3afe6"},size:{description:"The font size of the annotation.",type:["Number"],defaultValue:"12px"}},output:n.createElement(n.Fragment,null,"Styles a single ",n.createElement("code",null,"::before")," pseudo-element to a fixed position, with ",n.createElement("a",{href:"https://developer.mozilla.org/en-US/docs/Web/CSS/content",target:"_blank",rel:"nofollow noreferrer noopener"},n.createElement("code",null,"content"))," that describes the active horizontal and/or vertical breakpoints.")}}}},2465:(e,t,r)=>{r.d(t,{Z:()=>i});var a=r(9231),n=r(2204);function i(e){let{classNames:t}=e;const r=(0,n.Z)();return(0,a.useEffect)((()=>{if(r){const e="string"==typeof t?[t]:t;return document.body.classList.add(...e),()=>document.body.classList.remove(...e)}}),[r,t]),null}},2496:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>h,contentTitle:()=>d,default:()=>m,frontMatter:()=>l,metadata:()=>p,toc:()=>u});var a=r(7626),n=(r(9231),r(4852)),i=r(2465),o=r(3614);var s=r(2017);const l={title:"annotate ()",module:"break",sidebar_label:"annotate",sidebar_class_name:"mixin",hide_table_of_contents:!0},d=void 0,p={unversionedId:"api/break/helpers/annotate",id:"api/break/helpers/annotate",title:"annotate ()",description:"This page enables the breakpoint annotation as defined in the example above.",source:"@site/docs/api/break/helpers/annotate.mdx",sourceDirName:"api/break/helpers",slug:"/api/break/helpers/annotate",permalink:"/next/api/break/helpers/annotate",draft:!1,editUrl:"https://github.com/roydukkey/sass-fairy/edit/master/website/docs/api/break/helpers/annotate.mdx",tags:[],version:"current",frontMatter:{title:"annotate ()",module:"break",sidebar_label:"annotate",sidebar_class_name:"mixin",hide_table_of_contents:!0},sidebar:"breakSidebar",previous:{title:"Break API Overview",permalink:"/next/api/break/"},next:{title:"horizontal-names",permalink:"/next/api/break/horizontal/names"}},h={},u=[],c={toc:u};function m(e){let{components:t,...r}=e;return(0,n.kt)("wrapper",(0,a.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)(s.Z,{mdxType:"FieldDetails"}),(0,n.kt)(i.Z,{classNames:"annotate-example-v2",mdxType:"AddClassToPage"}),(0,n.kt)(o.Z,{className:"language-scss",mdxType:"CodeBlock"},"@use '@sass-fairy/break' with (\n\t$vertical-sizes: (\n\t\tx-small: 0,\n\t\tmedium: 680px,\n\t\tlarge: 960px,\n\t\tx-large: 1200px\n\t)\n);\n\nbody.annotate-example-v2 {\n\t@include break.annotate($position: 'bottom left', $size: 14px) {\n\t\tz-index: 300;\n\t}\n}\n"),(0,n.kt)("admonition",{type:"info"},(0,n.kt)("p",{parentName:"admonition"},"This page enables the breakpoint annotation as defined in the example above.")))}m.isMDXComponent=!0}}]);