"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[149],{2823:(e,t,r)=>{r.d(t,{Z:()=>n});var a=r(575),i=r(9231),s=r(7731);const n=e=>{let{children:t}=e;return i.createElement(a.Z,{spec:s.Z},t)}},7731:(e,t,r)=>{r.d(t,{Z:()=>l,C:()=>d});const a=JSON.parse('{"WL":"Provides Sass functions to standardize exception messages and assist with common validation"}');var i=r(9231);const s={context:{description:"The name of the function or mixin issuing the error.",type:["String"]}},n={message:{description:"The message which describes the issue.",type:["String"]}},o={value:{description:"The value which was received.",type:["*"]}},p={types:{description:"The types which are expected.",type:["ArgList<*>"]}},c={...s,name:{description:"The name of the index parameter which is being validated.",type:["String"]},value:{description:"The value of the index parameter which is being validated. A valid negative value will be transformed to the respective positive index value.",type:["Number"]}},d="Must be passed by name.",l={module:"exception",description:a.WL,basePath:"/api/exception",functions:{"is-separator-invalid":{group:"main",description:"Indicates whether a specified value is invalid for a separator parameter.",parameters:{value:{description:"The value which is being validated.",type:["*"]}},return:{description:i.createElement(i.Fragment,null,i.createElement("code",null,"true")," if the value is a valid; otherwise, ",i.createElement("code",null,"false"),"."),type:["Boolean"]}},parameter:{group:"main",description:"Returns an error message stating an issue with one or more parameters.",parameters:{...n,...s,names:{description:"The names of the parameters for which there is an issue.",type:["ArgList<*>"]}},return:{description:"A string describing the reason one or more parameters are invalid.",type:["String"]}},"parameter-type":{group:"main",description:"Returns an error message stating a parameter received the wrong type.",parameters:{...s,name:{description:"The name of the parameter which has received the wrong type.",type:["String"]},...o,...p},return:{description:"A string describing what types are acceptable for a parameter and the value that is invalid.",type:["String"]}},separator:{group:"main",description:"Returns an error message stating a separator variable received the wrong value.",return:{description:"A string describing what values are acceptable for a separator.",type:["String"]},overloads:[{description:"Returns an error message stating a separator parameter received the wrong value.",parameters:{context:{...s.context}}}]},"validate-index":{group:"main",description:"Returns a valid index for a list of a given length; otherwise, an error message stating the reason the index is invalid.",parameters:{...c,list:{description:"The list value for which the index is validated against.",type:["List"]}},return:{description:"A string when the index is not a number, is zero, or is invalid for the amount of elements in the list; otherwise, a number.",type:["Number","String"]},overloads:[{description:"Returns a valid index for a string of a given length; otherwise, an error message stating the reason the index is invalid.",parameters:{...c,string:{description:"The string value for which the index is validated against.",type:["String"]}},return:{description:"A string when the index is not a number; otherwise, a number."}}]},variable:{group:"main",description:"Returns an error message stating an issue with one or more variables.",parameters:{...n,names:{description:"The names of the variables for which there is an issue.",type:["ArgList<*>"]}},return:{description:"A string describing the reason one or more variables are misconfigured.",type:["String"]}},"variable-type":{group:"main",description:"Returns an error message stating a variable received the wrong type.",parameters:{name:{description:"The name of the variable which has received the wrong type.",type:["String"]},...o,...p,message:{description:["The additional message which describes the issue.",d].join(" "),type:["String"],defaultValue:"null"}},return:{description:"A string describing what types are acceptable for a variable and the value that is misconfigured.",type:["String"]}}}}},7174:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>d,contentTitle:()=>p,default:()=>h,frontMatter:()=>o,metadata:()=>c,toc:()=>l});var a=r(7626),i=(r(9231),r(4852)),s=r(3614);var n=r(2823);const o={title:"parameter-type ()",module:"exception",sidebar_label:"parameter-type",sidebar_class_name:"function",hide_table_of_contents:!0},p=void 0,c={unversionedId:"api/exception/parameter-type",id:"version-1/api/exception/parameter-type",title:"parameter-type ()",description:"",source:"@site/versioned_docs/version-1/api/exception/parameter-type.mdx",sourceDirName:"api/exception",slug:"/api/exception/parameter-type",permalink:"/api/exception/parameter-type",draft:!1,editUrl:"https://github.com/roydukkey/sass-fairy/edit/master/website/versioned_docs/version-1/api/exception/parameter-type.mdx",tags:[],version:"1",frontMatter:{title:"parameter-type ()",module:"exception",sidebar_label:"parameter-type",sidebar_class_name:"function",hide_table_of_contents:!0},sidebar:"exceptionSidebar",previous:{title:"parameter",permalink:"/api/exception/parameter"},next:{title:"separator",permalink:"/api/exception/separator"}},d={},l=[],m={toc:l};function h(e){let{components:t,...r}=e;return(0,i.kt)("wrapper",(0,a.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)(n.Z,{mdxType:"FieldDetails"}),(0,i.kt)(s.Z,{className:"language-scss",title:"@sass-fairy/color/src/_is-dark.sass",highlightKeywords:".parameter-type(",stripSassDocs:!0,rewriteFairyUses:!0,mdxType:"CodeBlock"},"// Copyright (c) roydukkey. All rights reserved.\n// Licensed under the MIT. See LICENSE file in the project root for full license information.\n\n@use 'sass:color'\n@use 'sass:math'\n@use 'sass:meta'\n@use '@sass-fairy/exception/src/parameter-type'\n\n\n///\n/// @throw `#{$color}` is not a color.\n///\n/// @access public\n/// @require parameter-type.parameter-type\n///\n/// @example for website/docs/api/exception/parameter-type.mdx\n///\n@function is-dark($color)\n\n\t@if meta.type-of($color) != 'color'\n\t\t@error parameter-type.parameter-type('is-dark', 'color', $color, 'color')\n\n\t@return math.div(color.red($color) * 299 + color.green($color) * 587 + color.blue($color) * 114, 1000) < 128\n"))}h.isMDXComponent=!0}}]);